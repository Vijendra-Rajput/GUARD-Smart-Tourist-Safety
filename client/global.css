/** @import must precede all other statements */
@import url("https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700;800&display=swap");

@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  /**
   * Tailwind CSS theme
   * tailwind.config.ts expects the following color variables to be expressed as HSL values.
   * A different format will require also updating the theme in tailwind.config.ts.
  */
  :root {
    --background: 210 40% 98%;
    --foreground: 223 47% 11%;

    --card: 0 0% 100%;
    --card-foreground: 223 47% 11%;

    --popover: 0 0% 100%;
    --popover-foreground: 223 47% 11%;

    --primary: 223 74% 47%;
    --primary-foreground: 210 40% 98%;

    --secondary: 215 16% 92%;
    --secondary-foreground: 223 47% 18%;

    --muted: 215 16% 90%;
    --muted-foreground: 215 16% 35%;

    --accent: 151 61% 41%;
    --accent-foreground: 0 0% 100%;

    --destructive: 0 72% 50%;
    --destructive-foreground: 210 40% 98%;

    --border: 215 20% 88%;
    --input: 215 20% 88%;
    --ring: 223 74% 47%;

    --radius: 0.75rem;

    --sidebar-background: 210 40% 97%;
    --sidebar-foreground: 223 47% 20%;
    --sidebar-primary: 223 74% 47%;
    --sidebar-primary-foreground: 0 0% 100%;
    --sidebar-accent: 151 61% 41%;
    --sidebar-accent-foreground: 0 0% 100%;
    --sidebar-border: 215 20% 88%;
    --sidebar-ring: 223 74% 47%;
  }

  .dark {
    --background: 223 47% 8%;
    --foreground: 210 40% 98%;

    --card: 223 47% 10%;
    --card-foreground: 210 40% 98%;

    --popover: 223 47% 8%;
    --popover-foreground: 210 40% 98%;

    --primary: 223 74% 60%;
    --primary-foreground: 223 47% 10%;

    --secondary: 222 15% 18%;
    --secondary-foreground: 210 40% 98%;

    --muted: 222 15% 18%;
    --muted-foreground: 215 20% 70%;

    --accent: 151 61% 45%;
    --accent-foreground: 223 47% 10%;

    --destructive: 0 62% 45%;
    --destructive-foreground: 210 40% 98%;

    --border: 222 15% 20%;
    --input: 222 15% 20%;
    --ring: 223 74% 60%;

    --sidebar-background: 223 47% 8%;
    --sidebar-foreground: 210 40% 98%;
    --sidebar-primary: 223 74% 60%;
    --sidebar-primary-foreground: 0 0% 100%;
    --sidebar-accent: 151 61% 45%;
    --sidebar-accent-foreground: 223 47% 10%;
    --sidebar-border: 222 15% 20%;
    --sidebar-ring: 223 74% 60%;
  }
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply text-foreground;
  }
}

/* animated light abstract gradient */
.animated-light-bg {
  background:
    radial-gradient(
      800px 400px at 10% 10%,
      hsla(220, 100%, 95%, 1) 0%,
      hsla(260, 100%, 95%, 1) 35%,
      rgba(255, 255, 255, 0.7) 100%
    ),
    radial-gradient(
      600px 300px at 80% 20%,
      rgba(96, 165, 250, 0.12),
      transparent 60%
    );
  background-size: 200% 200%;
  animation: moveLightGradient 20s ease-in-out infinite alternate;
}
@keyframes moveLightGradient {
  0% {
    background-position:
      0% 0%,
      100% 0%;
  }
  100% {
    background-position:
      100% 100%,
      0% 100%;
  }
}

/* frosted glass card (light theme primary) */
.glass {
  background: rgba(255, 255, 255, 0.6);
  border: 1px solid rgba(255, 255, 255, 0.8);
  backdrop-filter: blur(15px);
  -webkit-backdrop-filter: blur(15px);
  box-shadow: 0 12px 30px rgba(16, 24, 40, 0.06);
}
/* keep darker variant when .dark is used explicitly */
.dark .glass {
  background: rgba(16, 18, 28, 0.5);
  border-color: rgba(255, 255, 255, 0.12);
}

/* circular gradient icon container */
.icon-badge {
  @apply rounded-full flex items-center justify-center text-white;
  background: linear-gradient(
    135deg,
    rgba(59, 130, 246, 0.95),
    rgba(79, 70, 229, 0.95)
  );
  box-shadow: 0 8px 24px rgba(59, 130, 246, 0.25);
}

@layer components {
  .panic-3d {
    background: linear-gradient(
      180deg,
      hsl(var(--destructive)) 0%,
      color-mix(in srgb, hsl(var(--destructive)) 80%, black 20%)
    );
    box-shadow:
      0 8px 18px rgba(0, 0, 0, 0.12),
      0 2px 6px rgba(0, 0, 0, 0.06);
    transform: translateZ(0);
    will-change: transform, box-shadow, filter;
  }

  @keyframes panicGlow {
    0% {
      box-shadow:
        0 6px 14px rgba(239, 68, 68, 0.18),
        0 2px 6px rgba(0, 0, 0, 0.06);
      transform: translateY(0);
    }
    50% {
      box-shadow:
        0 18px 36px rgba(239, 68, 68, 0.28),
        0 6px 18px rgba(0, 0, 0, 0.08);
      transform: translateY(-4px) scale(1.02);
    }
    100% {
      box-shadow:
        0 6px 14px rgba(239, 68, 68, 0.18),
        0 2px 6px rgba(0, 0, 0, 0.06);
      transform: translateY(0) scale(1);
    }
  }

  .panic-blink {
    animation: panicGlow 2s ease-in-out infinite;
  }

  /* Path animation */
  .dt-path {
    stroke-dasharray: 8 6;
    animation: dash 4s linear infinite;
  }
  @keyframes dash {
    to {
      stroke-dashoffset: -28;
    }
  }

  /* Marker pulse */
  .dt-marker-pulse {
    animation: pulse 2s ease-out infinite;
  }
  @keyframes pulse {
    0% {
      transform: scale(1);
      opacity: 0.9;
    }
    50% {
      transform: scale(1.6);
      opacity: 0.18;
    }
    100% {
      transform: scale(1);
      opacity: 0.9;
    }
  }

  /* new helpers */
  .card-hover {
    transition:
      transform 180ms ease,
      box-shadow 180ms ease;
  }
  .card-hover:hover {
    transform: scale(1.03);
    box-shadow: 0 10px 30px rgba(16, 24, 40, 0.08);
  }

  .animate-pulse-slow {
    animation: pulse-slow 3s ease-in-out infinite;
  }
  @keyframes pulse-slow {
    0% {
      transform: scale(1);
      opacity: 0.85;
    }
    50% {
      transform: scale(1.02);
      opacity: 0.6;
    }
    100% {
      transform: scale(1);
      opacity: 0.85;
    }
  }

  .fade-up {
    opacity: 0;
    transform: translateY(6px);
    animation: fadeUp 360ms ease forwards;
  }
  @keyframes fadeUp {
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* alt path draw animation (used for suggested routes) */
  .dt-altpath {
    stroke-dasharray: 1000;
    stroke-dashoffset: 1000;
    animation: drawRoute 900ms ease forwards;
  }
  @keyframes drawRoute {
    to {
      stroke-dashoffset: 0;
    }
  }

  /* data orb */
  .data-orb {
    width: 80px;
    height: 80px;
    border-radius: 999px;
    transition:
      transform 0.18s ease,
      box-shadow 0.18s ease;
  }
  .data-orb:hover {
    transform: translateY(-6px) scale(1.04);
    box-shadow: 0 12px 30px rgba(79, 70, 229, 0.12);
  }

  /* brain line pulse */
  .brain-lines path {
    stroke-dasharray: 400;
    stroke-dashoffset: 400;
    animation: brainFlow 2200ms linear infinite;
  }
  @keyframes brainFlow {
    to {
      stroke-dashoffset: 0;
    }
  }

  /* marquee for infinite scrolling capabilities */
  .marquee {
    overflow: hidden;
    width: 100%;
  }
  .marquee-inner {
    display: flex;
    gap: 1rem;
    align-items: stretch;
    animation: marqueeMove 10s linear infinite;
  }
  .marquee:hover .marquee-inner {
    animation-play-state: paused;
  }
  @keyframes marqueeMove {
    0% {
      transform: translateX(0%);
    }
    100% {
      transform: translateX(-50%);
    }
  }

  /* data orb float + hover glow */
  .data-orb {
    width: 88px;
    height: 88px;
    border-radius: 999px;
    transition:
      transform 0.18s ease,
      box-shadow 0.18s ease;
    animation: floatOrb 6s ease-in-out infinite;
    background: linear-gradient(
      135deg,
      rgba(255, 255, 255, 0.6),
      rgba(255, 255, 255, 0.42)
    );
    border: 1px solid rgba(255, 255, 255, 0.6);
  }
  @keyframes floatOrb {
    0% {
      transform: translateY(0);
    }
    50% {
      transform: translateY(-6px);
    }
    100% {
      transform: translateY(0);
    }
  }
  .data-orb:hover {
    transform: translateY(-8px) scale(1.04);
    box-shadow:
      0 18px 36px rgba(59, 130, 246, 0.14),
      0 6px 18px rgba(79, 70, 229, 0.06);
    filter: drop-shadow(0 6px 18px rgba(59, 130, 246, 0.12));
  }
}
